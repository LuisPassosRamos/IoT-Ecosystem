version: '3.8'

services:
  # MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: iot-mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./infra/mqtt/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    restart: unless-stopped

  # Node-RED (Fog Layer)
  node-red:
    image: nodered/node-red:latest
    container_name: iot-node-red
    ports:
      - "1880:1880"
    volumes:
      - node_red_data:/data
      - ./fog/node-red/flows.json:/data/flows.json
    environment:
      - TZ=UTC
    depends_on:
      - mosquitto
    restart: unless-stopped

  # Cloud Backend
  backend:
    build:
      context: ./cloud-backend
      dockerfile: Dockerfile
    container_name: iot-backend
    ports:
      - "8000:8000"
    volumes:
      - ./cloud-backend:/app
      - backend_data:/app/data
    environment:
      - MQTT_HOST=mosquitto
      - MQTT_PORT=1883
      - DATABASE_URL=sqlite:///./data/sensor_data.db
      - JWT_SECRET=dev-secret-key-change-in-production
      - DEMO_USERNAME=admin
      - DEMO_PASSWORD=password123
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY:-}
    depends_on:
      - mosquitto
    restart: unless-stopped

  # Frontend (Static files served by nginx)
  frontend:
    image: nginx:alpine
    container_name: iot-frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./infra/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  mosquitto_data:
  mosquitto_logs:
  node_red_data:
  backend_data: